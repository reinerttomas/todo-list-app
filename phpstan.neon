# configuration phpstan.neon
includes:
    # require phpstan/extension-installer to avoid inlcuding these lines
    #- vendor/ekino/phpstan-banned-code/extension.neon     # https://github.com/ekino/phpstan-banned-code
    #- vendor/phpstan/phpstan-symfony/extension.neon       # https://github.com/phpstan/phpstan-symfony
    #- vendor/phpstan/phpstan-deprecation-rules/rules.neon # https://github.com/phpstan/phpstan-deprecation-rules
    #- vendor/phpstan/phpstan-strict-rules/rules.neon      # https://github.com/phpstan/phpstan-strict-rules
    #- vendor/phpstan/phpstan/phpstan-doctrine             # https://github.com/phpstan/phpstan-doctrine

parameters:
    # https://phpstan.org/config-reference#rule-level
    level: max

    # https://phpstan.org/config-reference#analysed-files
    # Note that I have put my configuraiton file in the "./configuration" directory
    # if you have yours at the root of your project remove the "../"
    paths:
        - src

    # https://github.com/phpstan/phpstan-symfony#configuration
    # Specific configuration for the Sumfony plugin
    symfony:
        # I use the prod env because I have false positive regarding the tests which
        # are executed in the test environment.
        container_xml_path: var/cache/test/App_KernelTestDebugContainer.xml

    # https://phpstan.org/config-reference#vague-typehints
    # checkMissingIterableValueType: false

    # It's a special "dev" project, I have to ignore the following warnings because
    # the use of this functions is intended.
    # @see https://phpstan.org/user-guide/ignoring-errors
    ignoreErrors:
        #- '#Should not use node with type "Expr_Exit", please change the code.#'   # warnings for "die()"
        #- '#Should not use node with type "Stmt_Echo", please change the code.#'   # warnings for "echo()"
        #- '#Should not use function "print_r", please change the code.#'           # warnings for "print_r()"
        #- '#Should not use function "var_dump", please change the code.#'          # warnings for "var_dump()"
        #- '#Should not use function "phpinfo", please change the code.#'           # warnings for "phpinfo()"
        #- '#Variable method call on#'                                              # dev blog!
        - '#Access to undefined constant App\\Entity\\[a-zA-Z]+.#'                  # php 8.1 enum workaround
        - '#Call to an undefined static method App\\Entity\\[a-zA-Z]+::from().#'    # php 8.1 enum workaround
        - '#Access to an undefined property App\\Entity\\[a-zA-Z]+::\$value.#'      # php 8.1 enum workaround

    # I don't use the Symfony PHPUnit bridge in this project, but if you do, you
    # probably will have to add the following bootstrap file:
    #bootstrapFiles:
        #- %rootDir%/../../../vendor/bin/.phpunit/phpunit/vendor/autoload.php

    # Doctrine extension
    # @see https://blog.martinhujer.cz/how-to-configure-phpstan-for-symfony-applications/
    doctrine:
        objectManagerLoader: build/phpstan/object-manager.php

    # @see https://phpstan.org/user-guide/stub-files
    stubFiles:
        - build/phpstan/stubs/ORM/AbstractQuery.stub